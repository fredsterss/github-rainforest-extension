// Generated by CoffeeScript 1.9.0
(function() {
  var ajaxHelper, renderRun;

  $('.discussion-timeline-actions').before("<div class='rainforest-info-holder'> <p>Current in progress runs:</p> <ul class='rainforest-run-history'></ul> <p>Run your tests:</p> <label>Env:</label> <select class='rainforest-envs'></select> <label>Tag:</label> <select class='rainforest-tags'> <option value='all'>All tests</option> </select> <br> <button class='btn run-rainforest'>Run Rainforest Suite</button> </div>");

  ajaxHelper = function(type, endpoint, data, cb) {
    return $.ajax({
      type: type,
      url: "https://app.rainforest.dev/api/1/" + endpoint,
      dataType: "json",
      data: data,
      headers: {
        CLIENT_TOKEN: "08b8bc4f0cec845a37f9266918e83e98"
      },
      success: (function(_this) {
        return function(data) {
          return typeof cb === "function" ? cb(data) : void 0;
        };
      })(this)
    });
  };

  renderRun = function(run) {
    return $(".rainforest-run-history").append("<li> <code> <a href='" + run.frontend_url + "'>run " + run.id + "</a>: " + run.requested_tests.length + " tests against " + run.environment.name + ". Run " + run.state + ", " + run.result + ". </code> </li>");
  };

  ajaxHelper("GET", "runs", {
    state: "in_progress"
  }, (function(_this) {
    return function(data) {
      var i, run, _i, _len, _results;
      _results = [];
      for (i = _i = 0, _len = data.length; _i < _len; i = ++_i) {
        run = data[i];
        _results.push(renderRun(run));
      }
      return _results;
    };
  })(this));

  ajaxHelper("GET", "environments", {}, (function(_this) {
    return function(data) {
      var env, i, selected, _i, _len, _results;
      _results = [];
      for (i = _i = 0, _len = data.length; _i < _len; i = ++_i) {
        env = data[i];
        selected = env["default"] === true ? "selected" : "";
        _results.push($('.rainforest-envs').append("<option value='" + env.id + "' " + selected + ">" + env.name + "</option>"));
      }
      return _results;
    };
  })(this));

  ajaxHelper("GET", "tests/tags", {}, (function(_this) {
    return function(data) {
      var i, tag, _i, _len, _results;
      _results = [];
      for (i = _i = 0, _len = data.length; _i < _len; i = ++_i) {
        tag = data[i];
        _results.push($('.rainforest-tags').append("<option value='" + tag.name + "'>" + tag.name + "</option>"));
      }
      return _results;
    };
  })(this));

  $('.run-rainforest').on("click", (function(_this) {
    return function() {
      var env, requestOptions, tag;
      env = $('.rainforest-envs').val();
      tag = $('.rainforest-tags').val();
      requestOptions = {
        environment_id: env
      };
      if (tag === "all") {
        requestOptions["tests"] = "all";
      } else {
        requestOptions["tags"] = [tag];
      }
      return ajaxHelper("POST", "runs", requestOptions, function(data) {
        return renderRun(data);
      });
    };
  })(this));

}).call(this);
